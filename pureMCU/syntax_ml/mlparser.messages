exp: THEN
##
## Ends in an error in state: 0.
##
## exp' -> . exp [ # ]
##
## The known suffix of the stack is as follows:
##
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: NOT THEN
##
## Ends in an error in state: 2.
##
## exp -> NOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## NOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: MINUS_DOT THEN
##
## Ends in an error in state: 3.
##
## exp -> MINUS_DOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## MINUS_DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: MINUS THEN
##
## Ends in an error in state: 4.
##
## exp -> MINUS . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LPAREN THEN
##
## Ends in an error in state: 5.
##
## simple_exp -> LPAREN . exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
## simple_exp -> LPAREN . RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET THEN
##
## Ends in an error in state: 7.
##
## exp -> LET . IDENT EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> LET . REC fundef IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> LET . LPAREN pat RPAREN EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC THEN
##
## Ends in an error in state: 8.
##
## exp -> LET REC . fundef IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET REC
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC IDENT THEN
##
## Ends in an error in state: 9.
##
## fundef -> IDENT . formal_args EQUAL exp [ IN ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC IDENT IDENT THEN
##
## Ends in an error in state: 10.
##
## formal_args -> IDENT . formal_args [ EQUAL ]
## formal_args -> IDENT . [ EQUAL ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC IDENT IDENT EQUAL THEN
##
## Ends in an error in state: 13.
##
## fundef -> IDENT formal_args EQUAL . exp [ IN ]
##
## The known suffix of the stack is as follows:
## IDENT formal_args EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: IF THEN
##
## Ends in an error in state: 15.
##
## exp -> IF . exp THEN exp ELSE exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## IF
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: ARRAY_CREATE THEN
##
## Ends in an error in state: 19.
##
## exp -> ARRAY_CREATE . simple_exp simple_exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## ARRAY_CREATE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: ARRAY_CREATE BOOL THEN
##
## Ends in an error in state: 20.
##
## exp -> ARRAY_CREATE simple_exp . simple_exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp . DOT LPAREN exp RPAREN [ LPAREN INT IDENT FLOAT DOT BOOL ]
##
## The known suffix of the stack is as follows:
## ARRAY_CREATE simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL BOOL DOT THEN
##
## Ends in an error in state: 21.
##
## simple_exp -> simple_exp DOT . LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL BOOL DOT LPAREN THEN
##
## Ends in an error in state: 22.
##
## simple_exp -> simple_exp DOT LPAREN . exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL REC
##
## Ends in an error in state: 23.
##
## exp -> simple_exp . [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> simple_exp . actual_args [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> simple_exp . DOT LPAREN exp RPAREN LESS_MINUS exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp . DOT LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL DOT THEN
##
## Ends in an error in state: 24.
##
## exp -> simple_exp DOT . LPAREN exp RPAREN LESS_MINUS exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp DOT . LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL DOT LPAREN THEN
##
## Ends in an error in state: 25.
##
## exp -> simple_exp DOT LPAREN . exp RPAREN LESS_MINUS exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp DOT LPAREN . exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL DOT LPAREN BOOL THEN
##
## Ends in an error in state: 26.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> simple_exp DOT LPAREN exp . RPAREN LESS_MINUS exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## simple_exp -> simple_exp DOT LPAREN exp . RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL SLASH_DOT THEN
##
## Ends in an error in state: 27.
##
## exp -> exp SLASH_DOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp SLASH_DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL COMMA BOOL COMMA THEN
##
## Ends in an error in state: 30.
##
## elems -> elems COMMA . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## elems COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL PLUS_DOT THEN
##
## Ends in an error in state: 32.
##
## exp -> exp PLUS_DOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp PLUS_DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL AST_DOT THEN
##
## Ends in an error in state: 34.
##
## exp -> exp AST_DOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp AST_DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL PLUS THEN
##
## Ends in an error in state: 36.
##
## exp -> exp PLUS . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp PLUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL MINUS_DOT THEN
##
## Ends in an error in state: 38.
##
## exp -> exp MINUS_DOT . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp MINUS_DOT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL MINUS THEN
##
## Ends in an error in state: 40.
##
## exp -> exp MINUS . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL LESS_GREATER THEN
##
## Ends in an error in state: 42.
##
## exp -> exp LESS_GREATER . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp LESS_GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL LESS_EQUAL THEN
##
## Ends in an error in state: 44.
##
## exp -> exp LESS_EQUAL . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp LESS_EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL LESS THEN
##
## Ends in an error in state: 46.
##
## exp -> exp LESS . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp LESS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL GREATER_EQUAL THEN
##
## Ends in an error in state: 48.
##
## exp -> exp GREATER_EQUAL . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp GREATER_EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL GREATER THEN
##
## Ends in an error in state: 50.
##
## exp -> exp GREATER . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp GREATER
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL EQUAL THEN
##
## Ends in an error in state: 52.
##
## exp -> exp EQUAL . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL SEMICOLON THEN
##
## Ends in an error in state: 54.
##
## exp -> exp SEMICOLON . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp SEMICOLON
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL COMMA THEN
##
## Ends in an error in state: 56.
##
## elems -> exp COMMA . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL DOT LPAREN BOOL RPAREN REC
##
## Ends in an error in state: 58.
##
## exp -> simple_exp DOT LPAREN exp RPAREN . LESS_MINUS exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp DOT LPAREN exp RPAREN . [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN exp RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL DOT LPAREN BOOL RPAREN LESS_MINUS THEN
##
## Ends in an error in state: 59.
##
## exp -> simple_exp DOT LPAREN exp RPAREN LESS_MINUS . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN exp RPAREN LESS_MINUS
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL BOOL REC
##
## Ends in an error in state: 61.
##
## actual_args -> simple_exp . [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE COMMA BOOL AST_DOT # ]
## simple_exp -> simple_exp . DOT LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL BOOL BOOL REC
##
## Ends in an error in state: 63.
##
## actual_args -> actual_args simple_exp . [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE COMMA BOOL AST_DOT # ]
## simple_exp -> simple_exp . DOT LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## actual_args simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL BOOL DOT LPAREN BOOL THEN
##
## Ends in an error in state: 64.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## simple_exp -> simple_exp DOT LPAREN exp . RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## simple_exp DOT LPAREN exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: ARRAY_CREATE BOOL BOOL REC
##
## Ends in an error in state: 66.
##
## exp -> ARRAY_CREATE simple_exp simple_exp . [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## simple_exp -> simple_exp . DOT LPAREN exp RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE DOT COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## ARRAY_CREATE simple_exp simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: IF BOOL RPAREN
##
## Ends in an error in state: 67.
##
## elems -> exp . COMMA exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> IF exp . THEN exp ELSE exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> exp . PLUS_DOT exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SEMICOLON exp [ THEN SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
##
## The known suffix of the stack is as follows:
## IF exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: IF BOOL THEN THEN
##
## Ends in an error in state: 68.
##
## exp -> IF exp THEN . exp ELSE exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## IF exp THEN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: IF BOOL THEN BOOL THEN
##
## Ends in an error in state: 69.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> IF exp THEN exp . ELSE exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT ]
##
## The known suffix of the stack is as follows:
## IF exp THEN exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: IF BOOL THEN BOOL ELSE THEN
##
## Ends in an error in state: 70.
##
## exp -> IF exp THEN exp ELSE . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## IF exp THEN exp ELSE
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC IDENT IDENT EQUAL BOOL THEN
##
## Ends in an error in state: 72.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## fundef -> IDENT formal_args EQUAL exp . [ IN ]
##
## The known suffix of the stack is as follows:
## IDENT formal_args EQUAL exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET REC IDENT IDENT EQUAL BOOL IN THEN
##
## Ends in an error in state: 74.
##
## exp -> LET REC fundef IN . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET REC fundef IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN THEN
##
## Ends in an error in state: 76.
##
## exp -> LET LPAREN . pat RPAREN EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET LPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT THEN
##
## Ends in an error in state: 77.
##
## pat -> IDENT . COMMA IDENT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA THEN
##
## Ends in an error in state: 78.
##
## pat -> IDENT COMMA . IDENT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## IDENT COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT THEN
##
## Ends in an error in state: 80.
##
## exp -> LET LPAREN pat . RPAREN EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## pat -> pat . COMMA IDENT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## LET LPAREN pat
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT RPAREN THEN
##
## Ends in an error in state: 81.
##
## exp -> LET LPAREN pat RPAREN . EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET LPAREN pat RPAREN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT RPAREN EQUAL THEN
##
## Ends in an error in state: 82.
##
## exp -> LET LPAREN pat RPAREN EQUAL . exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET LPAREN pat RPAREN EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT RPAREN EQUAL BOOL THEN
##
## Ends in an error in state: 83.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> LET LPAREN pat RPAREN EQUAL exp . IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
##
## The known suffix of the stack is as follows:
## LET LPAREN pat RPAREN EQUAL exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT RPAREN EQUAL BOOL IN THEN
##
## Ends in an error in state: 84.
##
## exp -> LET LPAREN pat RPAREN EQUAL exp IN . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET LPAREN pat RPAREN EQUAL exp IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET LPAREN IDENT COMMA IDENT COMMA THEN
##
## Ends in an error in state: 86.
##
## pat -> pat COMMA . IDENT [ RPAREN COMMA ]
##
## The known suffix of the stack is as follows:
## pat COMMA
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET IDENT THEN
##
## Ends in an error in state: 88.
##
## exp -> LET IDENT . EQUAL exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET IDENT
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET IDENT EQUAL THEN
##
## Ends in an error in state: 89.
##
## exp -> LET IDENT EQUAL . exp IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUAL
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET IDENT EQUAL BOOL THEN
##
## Ends in an error in state: 90.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> LET IDENT EQUAL exp . IN exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUAL exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LET IDENT EQUAL BOOL IN THEN
##
## Ends in an error in state: 91.
##
## exp -> LET IDENT EQUAL exp IN . exp [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS IN GREATER_EQUAL GREATER EQUAL ELSE COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LET IDENT EQUAL exp IN
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: LPAREN BOOL THEN
##
## Ends in an error in state: 93.
##
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT ]
## simple_exp -> LPAREN exp . RPAREN [ THEN SLASH_DOT SEMICOLON RPAREN PLUS_DOT PLUS MINUS_DOT MINUS LPAREN LESS_GREATER LESS_EQUAL LESS INT IN IDENT GREATER_EQUAL GREATER FLOAT EQUAL ELSE DOT COMMA BOOL AST_DOT # ]
##
## The known suffix of the stack is as follows:
## LPAREN exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

exp: BOOL THEN
##
## Ends in an error in state: 98.
##
## exp' -> exp . [ # ]
## elems -> exp . COMMA exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . PLUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . MINUS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . LESS_GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . LESS exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . GREATER exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . LESS_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . GREATER_EQUAL exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . PLUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . MINUS_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . AST_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . SLASH_DOT exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
## exp -> exp . SEMICOLON exp [ SLASH_DOT SEMICOLON PLUS_DOT PLUS MINUS_DOT MINUS LESS_GREATER LESS_EQUAL LESS GREATER_EQUAL GREATER EQUAL COMMA AST_DOT # ]
##
## The known suffix of the stack is as follows:
## exp
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 23, spurious reduction of production exp -> simple_exp
##

<YOUR SYNTAX ERROR MESSAGE HERE>

